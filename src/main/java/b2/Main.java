/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package b2;


import b2.BackBlaze.BackblazeB2Auth;

import java.io.File;

import b2.BackBlaze.BackblazeB2;
import b2.BackBlaze.models.B2Bucket1;
import b2.BackBlaze.models.B2File1;
import b2.BackBlaze.models.B2Session1;
import b2.BackBlaze.models.B2UploadRequest1;
import b2.BackBlaze.models.BucketType1;
import b2.BackBlaze2.*;
import b2.BackBlaze2.listeners.ProgressRequestBody;
import b2.BackBlaze2.models.B2Bucket;
import b2.BackBlaze2.models.B2UploadInfo;

public class Main {
  
  private static String appKeyId = "005e6f0ff38588b000000000a";
  private static String appKey = "K005k2tpcpfoqMY525/C9Pj5kHbDWXY";
    public static void main(String[] args) {

      B2 b2 = new B2(appKeyId, appKey);


      b2.getInfo().getAuthorizationToken();
      B2Bucket bucket = new B2Bucket();
      bucket.setBucketName("musicmmmTest31"); //bucket names are unique
      bucket.setBucketType(B2.BUCKET_TYPE_PUBLIC); //public or private
      B2Bucket bucket1 = b2.createBucket(bucket);

      System.out.println("벗킷 ID: "+ bucket1.getBucketId());
      System.out.println("버킷 이름: " + bucket1.getBucketName());
      System.out.println("버킷 타입: " + bucket1.getBucketType());
      System.out.println("아이디: " + bucket1.getAccountId());

      B2UploadInfo uploadInfo = b2.getUploadInfo(bucket1.getBucketId()); //Get upload info for specific bucket

      System.out.println("인증 토큰: " + uploadInfo.getAuthorizationToken());
      System.out.println("버킷 ID: " + uploadInfo.getBucketId());
      System.out.println("업로드 URL: "+ uploadInfo.getUploadUrl());

      File path = new File("");
     
      File file = new File(path.getAbsolutePath()+"/src/file/10MB.txt");

    if(file.exists()) {
      b2.uploadFile(file, uploadInfo);
    //   System.out.println("파일이 존재함!!");
    //   b2.uploadFile(file, uploadInfo , new ProgressRequestBody.ProgressListener() {
    //     @Override
    //     public void onProgress(long bytesWritten, long contentLength, boolean done) {
    //         System.out.println("업로드 중..." + bytesWritten);
    //     }
    // });

    }
    else {
      System.out.println("파일 없음");
    }
//       b2.uploadFile(file, uploadInfo, new ProgressRequestBody.ProgressListener() {
//     @Override
//     public void onProgress(long bytesWritten, long contentLength, boolean done) {
//         System.out.println("업로드 중..." + bytesWritten);
//     }
// });
//     } else {
//       System.out.println("파일이 없음!!");
//     }
      // authenticate();
    }

  // 인증 작업
  private static void authenticate() {
    
    BackblazeB2Auth authentication = new BackblazeB2Auth();

    authentication.setOnAuthStateListener(new BackblazeB2Auth.OnAuthStateListener() {

      @Override
      public void onSuccess(B2Session1 b2Session) {

          System.out.println("Download URL: " + b2Session.getDownloadURL());
          System.out.println("Authentication Token: " + b2Session.getAuthToken());
          System.out.println("API URL: " + b2Session.getAPIURL());
          System.out.println("Account Id: " + b2Session.getAccountID());

          createBucket(b2Session);
          
      }

      @Override
      public void onFailed(String message) {

      }
    });

    authentication.authenticate();
  }

  // 버킷 생성
  private static void createBucket(B2Session1 b2Session) {
    BackblazeB2 bucketCreation = new BackblazeB2();

    bucketCreation.setOnBucketStateListener(new BackblazeB2.OnCreateBucketStateListener() {
      @Override
      public void onSuccess(String message) {
        System.out.println(message);
      }

      @Override
      public void onFailed(String message) {
        System.out.println(message);
      }
    });

    B2Bucket1 b2Bucket = bucketCreation.createBucket(b2Session, "Te1243984", BucketType1.ALL_PUBLIC);
    System.out.println(b2Bucket.getID());
    System.out.println(b2Bucket.getName());

    getUploadUrl(bucketCreation, b2Session, b2Bucket);
  }


  private static void getUploadUrl(BackblazeB2 backblazeB2, B2Session1 b2Session, B2Bucket1 b2Bucket) {
    B2UploadRequest1 b2UploadRequest = backblazeB2.getUploadURL(b2Session, b2Bucket);
    System.out.println("업로드 URL: " + b2UploadRequest.getUploadURL());

    File path = new File("");
    File file = new File(path.getAbsolutePath()+"/src/file/10MB.txt");
    
    if(file.exists()) {
      uploadFile(backblazeB2, b2UploadRequest, file, "hello/10MB.txt");
    } else {
      System.out.println("파일이 없음!!");
    }
    
    
  }

  private static void uploadFile(BackblazeB2 backblazeB2, B2UploadRequest1 b2UploadRequest, File file, String name) {
    backblazeB2.setOnUploadFileStateListener(new BackblazeB2.OnUploadFileStateListener() {
      @Override
      public void onSuccess(String message) {
        System.out.println(message);
      }

      @Override
      public void onFailed(String message) {
        System.out.println(message);
      }
    });

    B2File1 b2File = backblazeB2.uploadFile(b2UploadRequest, file, name);

    System.out.println("업로드된 파일의 크기: " + b2File.getSize());
  }

  
    
    // private static void downloadFile(String URL, String authorization, B2File file, File destination)  {
    //     try {
    //         URL url = new URL(URL + "/b2api/v3/b2_download_file_by_id");
    //         HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();
    //         connection.setRequestMethod("POST");
    //         connection.setRequestProperty("User-Agent", USER_AGENT);
    //         connection.setRequestProperty("Authorization", authorization);

    //         connection.setDoOutput(true);
    //         DataOutputStream outputStream = new DataOutputStream(connection.getOutputStream());
    //         outputStream.writeBytes(new JSONObject().put("fileId", file.getID()).toString());
    //         outputStream.flush();
    //         outputStream.close();

    //         if(connection.getResponseCode() < 400){
    //             InputStream inputStream =  connection.getInputStream();
    //             OutputStream fileOutputStream = new FileOutputStream(destination);

    //             int read = 0;
    //             byte[] bytes = new byte[1024];

    //             while ((read = inputStream.read(bytes)) != -1) {
    //                 fileOutputStream.write(bytes, 0, read);
    //             }
    //             fileOutputStream.close();
    //             connection.disconnect();
    //         }else{
    //             InputStream errorStream =  connection.getErrorStream();
    //             JSONObject requestResult = inputToJSON(errorStream);

    //             B2APIException exception = new B2APIException(requestResult.getString("message"));
    //             exception.setStatusCode(requestResult.getInt("status"));
    //             exception.setIdentifier(requestResult.getString("code"));
    //             throw exception;
    //         }

    //     } catch (IOException ignored) {}
    // }
}